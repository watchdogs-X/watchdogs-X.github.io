<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Manjaro Linux 美化日记</title>
      <link href="/2022/12/18/manjaroedit/"/>
      <url>/2022/12/18/manjaroedit/</url>
      
        <content type="html"><![CDATA[<div class="note blue no-icon flat"><p><strong>本篇是部分美化日记，一防日后因某些大问题而回不来</strong></p></div><p><img src="https://s1.vika.cn/space/2022/12/19/4dc36943bf674fbd87bfd5233eaa6065"></p><h2 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h2><p>略</p><h2 id="2、添加AUR源"><a href="#2、添加AUR源" class="headerlink" title="2、添加AUR源"></a>2、添加AUR源</h2><p>manjaro是基于Arch的，所以也能使用Arch的AUR</p><p>修改<strong>pacman.conf</strong>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/pacman.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在最后添加以下三行内容</span></span><br><span class="line"></span><br><span class="line">+ [archlinuxcn]</span><br><span class="line">+ SigLevel = Optional TrustedOnly</span><br><span class="line">+ Server = https://mirrors.tsinghua.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#之后保存更新</span></span><br><span class="line"></span><br><span class="line">sudo pacman -Syyu</span><br></pre></td></tr></table></figure><p><strong>安装archlinuxcn-keyring包导入GPG key</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure><p><strong>GIT</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S git</span><br></pre></td></tr></table></figure><p><strong>chrome浏览器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#chrome浏览器</span></span><br><span class="line"></span><br><span class="line">sudo pacman -S google-chrome</span><br></pre></td></tr></table></figure><h2 id="3、美化"><a href="#3、美化" class="headerlink" title="3、美化"></a>3、美化</h2><p><strong>全局主题-layan</strong></p><p><a href="https://github.com/vinceliuice/Layan-kde">https://github.com/vinceliuice/Layan-kde</a></p><p><img src="https://images.pling.com/img/00/00/32/24/44/1325241/a31142754df9a88beb9ba19d9445fb579e36.png"></p><p><strong>Plasma样式</strong></p><p><img src="https://s1.vika.cn/space/2022/12/19/9e42d18f8577464c858d6e10d0082c06"></p><p><strong>颜色</strong></p><p><img src="https://s1.vika.cn/space/2022/12/19/1d7b39bf94fb4c528ac05be3f5346f34"></p><p><strong>图标</strong></p><p><img src="https://s1.vika.cn/space/2022/12/19/88ff23b48ce849c5951bbab93dd0ce85"></p><p><strong>设置——工作区行为——桌面特效</strong></p><p><img src="https://s1.vika.cn/space/2022/12/19/820790baa4cd4444992e106641bfb6c9"></p><p><img src="https://s1.vika.cn/space/2022/12/19/db5d6ba6bd834e329fb975113fb79b7b"></p><p><strong>窗口透明度</strong></p><p><img src="https://s1.vika.cn/space/2022/12/19/36608ffadaee4011b8b5f74e2e0a16ab"></p><p><strong>窗口背景虚化</strong></p><p><img src="https://s1.vika.cn/space/2022/12/19/deeeda86a7004c97be98f8f63914c390"></p><p><strong>gnome-gtk程序风格</strong></p><p>文件：<a href="https://pan.baidu.com/s/1SZbrEzFI2SFCBMEJ0zmuHQ">https://pan.baidu.com/s/1SZbrEzFI2SFCBMEJ0zmuHQ</a>  密码: r8t5</p><p>用到的软件 kvantum</p><p>软件库里有，点击直接安装</p><p><img src="https://s1.vika.cn/space/2022/12/19/676f54d1e87d48e8bfd2ba7c17dca77b"></p><p>也可以用终端安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S kvantum</span><br></pre></td></tr></table></figure><p>选择主题安装</p><p><img src="https://s1.vika.cn/space/2022/12/19/7b8e6c632b684301b6b3e0c5fc6df7c4"></p><p>稍作修改</p><p><img src="https://s1.vika.cn/space/2022/12/19/52ff63c5c19c4c48b04aceae423d48ec"></p><p><img src="https://s1.vika.cn/space/2022/12/19/dd90df2a929a427b9de415d422f9c28c"></p><p><strong>保存，然后在设置里应用 kvantum 即可</strong></p><h2 id="任务栏插件"><a href="#任务栏插件" class="headerlink" title="任务栏插件"></a>任务栏插件</h2><p><strong>panon音乐插件</strong></p><p><a href="https://github.com/rbn42/panon">https://github.com/rbn42/panon</a></p><p><strong>配置</strong></p><p><img src="https://s1.vika.cn/space/2022/12/19/700ee4bf84e04e2582709d17d3f6f3d4"><img src="https://s1.vika.cn/space/2022/12/19/7e8aa9a2b99546d0b97603ad8f74fd00"></p><p><strong>Dock栏</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S plank</span><br></pre></td></tr></table></figure><p><strong>配置</strong></p><p><img src="https://s1.vika.cn/space/2022/12/19/901760c09f14490a89e0981f25442af9"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Y9000P一周使用及吐槽</title>
      <link href="/2022/12/17/y9000p/"/>
      <url>/2022/12/17/y9000p/</url>
      
        <content type="html"><![CDATA[<p>时隔两三个多月, 我也终于能拥有一台属于我自己的电脑了.<br>(其实主要是因为疫情原因, 学校一直处于封校状态)</p><p><img src="https://s1.vika.cn/space/2022/12/17/f1b38aceeccc4f06bfc6203f1394e994"></p><p><strong>本人选的设备是Y9000P 2022 钛晶灰 ,在线下实体店购的.</strong></p><p>整机大小为长360mm，宽264mm，高19.9mm，重量2.53kg</p><table><thead><tr><th align="center">硬件</th><th align="center">参数</th></tr></thead><tbody><tr><td align="center">CPU</td><td align="center">12th Gen Intel(R) Core(TM) I9-12900H</td></tr><tr><td align="center">显卡</td><td align="center">NVIDIA GeForce RTX3070 Ti Laptop GPU</td></tr><tr><td align="center">硬盘</td><td align="center">512GBSSD</td></tr><tr><td align="center">内存</td><td align="center">16GB(8+8) DDR6</td></tr><tr><td align="center">屏幕</td><td align="center">165Hz 2.5K 电竞屏</td></tr><tr><td align="center">屏幕比例</td><td align="center">16:10</td></tr><tr><td align="center">键盘背光</td><td align="center">白色 两档亮度</td></tr></tbody></table><p><strong>外设接口:</strong></p><p>左侧雷电4+USB-C接口, 可以满足手机连接、高速充电、屏幕拓展等需求。</p><p><img src="https://s1.vika.cn/space/2022/12/17/fabded04c27e4db7b2ac2b194231a455"></p><p>右侧有一个摄像头物理开关，一个3.5mm耳机接口和一个USB3.2 Gen1接口.</p><p><img src="https://s1.vika.cn/space/2022/12/17/22d80eaf9f7b4f3c80343de8ab23aacf"></p><p>一个网线接口, 一个支持135w功率的USB-C接口，一个HDMI2.1接口, 两个USB3.2 Gen1插口，最后还有一个电源接口.<img src="https://s1.vika.cn/space/2022/12/17/2429118177604d8da43bb66c91fc0aae"></p><h2 id="一、为什么选择联想，为什么选择Y9000P。"><a href="#一、为什么选择联想，为什么选择Y9000P。" class="headerlink" title="一、为什么选择联想，为什么选择Y9000P。"></a>一、为什么选择联想，为什么选择Y9000P。</h2><p><strong>至于为什么:</strong></p><p>其实没有为啥, 本来是想选光影精灵的, 但考虑到能用多长时间的问题, 一台电脑只要用不坏, 那用它个七八年应该时还能扛得住的, 我又不专打游戏, 但这样的配置完全可以带动任何软件<br>其次我是软件工程专业, 后期开虚拟机什么的都是必要的, 并且考虑到以后更多复杂的场景, 所以一台高配的设备也是不可缺少的.</p><p><strong>其他促使我选择联想的因素还有:</strong></p><h3 id="1、外观"><a href="#1、外观" class="headerlink" title="1、外观"></a>1、外观</h3><p>外观部分,A面发光的Y字型灯光依旧是它的设计重心，除此之外，两侧的线条凸显了一丝质感, 在造型设计上给人一种沉稳大气的视觉感受.</p><p><img src="https://pic1.zhimg.com/v2-a650003eff8b1c2dba398db58bc5b28b_1440w.jpg?source=172ae18b"></p><p><img src="https://s1.vika.cn/space/2022/12/17/f797711a9d3b47b9b6dec822eb825ab8"></p><p>Y9000P的B面边框表现十分优秀，搭载了16:10比例的屏幕之后,  和16：9的机型相比少了大下巴，摄像头部分也没有向外突出, 整体控制在一个完美的矩形里,  让整机看起来多了一些高级感，同时屏幕一圈的防撞胶条依旧保留，没有为了视觉观感而牺牲稳定性。</p><p><img src="https://s1.vika.cn/space/2022/12/17/5b9160bc81b6499aa84f113b61287285"></p><p>其次C面的键盘颜色采用与机身相同的灰色,  从实际体验来看,  手感非常的顺滑，在同级别里算是优秀水平，键帽大键程长，同时还拥有着全尺寸的方向键，对于游戏玩家来说我觉得还是挺有意义的。</p><p><img src="https://s1.vika.cn/space/2022/12/17/bfa71e75ad604f6d95b469a4e0636078"></p><h3 id="2、性能释放"><a href="#2、性能释放" class="headerlink" title="2、性能释放"></a>2、性能释放</h3><p>我还是个硬件小白, 所以没有自己亲自测试,然后就去各大测评网上看</p><p>对于联想的Y9000P的测评都不错，性能释放不错。</p><p>在与其他笔记本对比, 数值都能达到我的期望.</p><h2 id="二、关于我自己的吐槽"><a href="#二、关于我自己的吐槽" class="headerlink" title="二、关于我自己的吐槽"></a>二、关于我自己的吐槽</h2><h3 id="1、续航能力差"><a href="#1、续航能力差" class="headerlink" title="1、续航能力差"></a>1、续航能力差</h3><p>续航能力实在是太低了, 撑死两个小时.</p><p>不过身为游戏本, 这一点是可以原谅的.</p><h3 id="2、不方便携带"><a href="#2、不方便携带" class="headerlink" title="2、不方便携带"></a>2、不方便携带</h3><p>将近三千克的笔记本, 到哪携带都不方便,  其次外加续航能力差,  还不得不再考虑一下电源问题. </p><h3 id="3、噪音"><a href="#3、噪音" class="headerlink" title="3、噪音"></a>3、噪音</h3><p>这一点不特别反感, 毕竟不怎么玩游戏,<br>但真正去玩游戏时, 那噪音犹如开了大奔似的</p><h2 id="三、最后"><a href="#三、最后" class="headerlink" title="三、最后"></a>三、最后</h2><p><strong>最后,也要感谢父母的支持,我以后一定要好好努力,不能辜负父母的期望,同时也为自己更好的未来加油!</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言(第七章--函数)</title>
      <link href="/2022/12/12/c_language_7/"/>
      <url>/2022/12/12/c_language_7/</url>
      
        <content type="html"><![CDATA[<h1 id="7-1-为什么要用函数"><a href="#7-1-为什么要用函数" class="headerlink" title="7.1 为什么要用函数"></a>7.1 为什么要用函数</h1><h2 id="1、为什么需要："><a href="#1、为什么需要：" class="headerlink" title="1、为什么需要："></a>1、为什么需要：</h2><ul><li>程序需要多次实现某一功能</li><li>程序需要实现多种功能</li></ul><p>组装思想—&gt;模块化程序设计</p><h2 id="2、什么是函数："><a href="#2、什么是函数：" class="headerlink" title="2、什么是函数："></a>2、什么是函数：</h2><p>函数（function）：函数就是功能，每一个函数用来实现某一个特定的功能</p><h2 id="3、函数从哪来："><a href="#3、函数从哪来：" class="headerlink" title="3、函数从哪来："></a>3、函数从哪来：</h2><ul><li>库函数</li><li>编译函数</li><li>自己编写函数</li></ul><h2 id="4、函数的分类"><a href="#4、函数的分类" class="headerlink" title="4、函数的分类"></a>4、函数的分类</h2><ul><li>无参函数</li><li>有参函数</li></ul><h2 id="5、其他"><a href="#5、其他" class="headerlink" title="5、其他"></a>5、其他</h2><ul><li>一个C程序由一个或多个源文件组成</li><li>一个源文件由一个或多个函数组成</li></ul><h1 id="7-2怎么定义函数"><a href="#7-2怎么定义函数" class="headerlink" title="7.2怎么定义函数"></a>7.2怎么定义函数</h1><h2 id="1、为什么要定义"><a href="#1、为什么要定义" class="headerlink" title="1、为什么要定义"></a>1、为什么要定义</h2><ul><li>程序中用到的所有函数必须“先定义，后使用”</li><li>同变量定义的道理类似，需要事先告知系统该函数功能、参数等信息，具体包括：<blockquote><p>函数的名字，一遍按名调用<br>函数的类型，即函数返回值的类型<br>函数的参数名字即类型，以便调用函数时像他们传递数据<br>函数完成什么操作，即功能</p></blockquote></li></ul><h2 id="2、定义函数的方法"><a href="#2、定义函数的方法" class="headerlink" title="2、定义函数的方法"></a>2、定义函数的方法</h2><div class="note blue no-icon flat"><p>定义无参函数</p></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">类型名 函数名()             <span class="comment">//()内可以加void，可不加</span></span><br><span class="line">&#123;</span><br><span class="line">      函数体</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line"><span class="type">void</span> <span class="title function_">pr</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">      ptintf(<span class="string">&quot;hello world!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note blue no-icon flat"><p>定义有参函数</p></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">类型名 函数名(形参列表)</span><br><span class="line">&#123;</span><br><span class="line">      函数体</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">return</span>(a&gt;b?a:b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note blue no-icon flat"><p>定义空函数</p></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">类型名 函数名()</span><br><span class="line">&#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">()</span></span><br><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure><h1 id="7-3调用函数"><a href="#7-3调用函数" class="headerlink" title="7.3调用函数"></a>7.3调用函数</h1><p>一般形式：函数名(实参表列）</p><h2 id="1、调用函数的形式"><a href="#1、调用函数的形式" class="headerlink" title="1、调用函数的形式"></a>1、调用函数的形式</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">函数调用语句</span><br><span class="line">例：</span><br><span class="line">pr();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">函数表达式              <span class="comment">//函数调用语句出现在另一个表达式中</span></span><br><span class="line">例：</span><br><span class="line">c=<span class="number">2</span>*max(a,b);         <span class="comment">//调用函数带回一个确定值并参</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">加表达式的运算</span><br><span class="line">函数参数                          <span class="comment">//函数调用作为另一个函数调用时的参数</span></span><br><span class="line">例：</span><br><span class="line">m=max(a,max(b,c));         <span class="comment">//将调用max函数的结果再重新作为下一次调用max函数的参数</span></span><br></pre></td></tr></table></figure><h2 id="2、函数调用时的数据传递"><a href="#2、函数调用时的数据传递" class="headerlink" title="2、函数调用时的数据传递"></a>2、函数调用时的数据传递</h2><p>在调用有参函数时，系统会把实参的值传传给被调用函数的形参，该值在函数调用期间有效。</p><p><strong>1.形参：定义函数时，函数名括号后面的变量称为形式参数（或虚拟参数）</strong></p><ul><li>形参在函数调用时被分配内存单元，调用结束后立即释放</li><li>形参为变量时，实参与形参的数据传递是“值传递”，即“单向传递”。</li></ul><p><strong>2.实参：在主调函数中调用一个函数时，函数名后面括号中的参数称为实际参数</strong></p><ul><li>实参可以是常量、变量或表达式，但要求有确定值。</li><li>应保证形参与实参个数、类型、顺序的一致（字符型与整型可通用）。</li><li>形参与实参的类型应相同或i赋值兼容。</li></ul><div class="note red modern"><p>注：实参向形参的数据传递是“值传递”，单向传递，只能由实参传给形参，而不能由形参传给实参。<br>实参和形参在内存中占有不同的存储单元，实参无法得到形参的值。</p></div><h2 id="3、函数的返回值"><a href="#3、函数的返回值" class="headerlink" title="3、函数的返回值"></a>3、函数的返回值</h2><p>调函数调用函数希望得到一个确定值，这就是函数的返回值</p><ul><li><p>函数的返回值是通过return语句获得的</p></li><li><p>可以有多个return语句，但只能有一个起作用。即函数只能返回一个值</p></li><li><p>函数返回值的类型取决于定义函数时指定的函数值的类型</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>             <span class="comment">//函数值为整型</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span>..y)</span>         <span class="comment">//函数值为double类型</span></span><br></pre></td></tr></table></figure></li><li><p>在定义函数时指定的函数类型一般应该和return语句中的表达式一致，若不一致，则以函数类型为<br>准，即函数类型决定返回值类型。</p></li><li><p>对于不带返回值的函数，应当定义为void类型。</p></li></ul><p><strong>小结</strong></p><ul><li>函数——即想要实现某一功能所编写的程序，可将其理解为一个黑匣子，给它相应的输入（由调用<br>者决定），它经过加工操作，给出你一个输出（结果）。</li><li>函数的定义可理解为该制作该黑匣子，需要包括以下信息：<blockquote><p>需要明确告知该函数的名字（一般以黑匣子的功能简称作为名字，做到见名知意）<br>使用该函数需要提供的输入（包括明确规定需要提供几个输入以及每个输入的类型）<br>该函数能够实现什么功能（黑匣子的详细功能介绍）<br>函数类型，也称函数返回值类型（即执行完毕后会输出什么）</p><blockquote><p>该输出值由return语句带回。<br>若不用带回值，则不用写return语句，同时函数定义为void类型<br>返回值类型应与函数类型一致，若不一致，则以函数类型为准。</p></blockquote></blockquote></li><li>函数调用：使用该黑匣子的过程，若需要提供输入，则涉及到形参和实参之间的数据传递</li></ul><h1 id="7-4对被调用函数的声明和函数原型"><a href="#7-4对被调用函数的声明和函数原型" class="headerlink" title="7.4对被调用函数的声明和函数原型"></a>7.4对被调用函数的声明和函数原型</h1><p><strong>1、调用函数时应该具备的条件</strong></p><ul><li>被调用函数必须是已经定义的函数</li><li>若该被调用函数为库函数，则需要在文件开头，用#include指令调用</li><li>若该被调用函数为用户自己定义的函数，而该函数的位置在调用它的函数的后面，则需要在主调函数中对被调函数做声明。<ul><li>声明是为了提前将该函数的相关信息告知编译系统，以允许编译系统检查调用是否合法。</li></ul></li></ul><p><strong>2、函数声明的形式(2种)</strong></p><ul><li>1.函数类型函数名(参数类型1参数名1,参数类型2c参数名2,……参数类型n参数名n);</li><li>2.函数类型函数名(参数类型1,参数类型2,……参数类型n)</li></ul><h1 id="7-5函数的嵌套调用"><a href="#7-5函数的嵌套调用" class="headerlink" title="7.5函数的嵌套调用"></a>7.5函数的嵌套调用</h1><p><strong>在调用一个函数的过程中，又调用另一个函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun2</span><span class="params">(<span class="type">int</span> m)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> m*m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">fun1</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> fun2(x) + fun2(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,fun1(a,b));</span><br><span class="line">    return0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-6函数的递归调用"><a href="#7-6函数的递归调用" class="headerlink" title="7.6函数的递归调用"></a>7.6函数的递归调用</h2><p><strong>在调用一个函数的过程中又直接或间接地调用该函数本身</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">unsigned</span> <span class="title function_">fac</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> f;</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">0</span>)</span><br><span class="line">        f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        f = fac(n<span class="number">-1</span>)*n;</span><br><span class="line">    <span class="keyword">return</span> f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> n,y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    y = fac(n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d!=%d\n&quot;</span>,n,y);</span><br><span class="line">    return0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-7数组作为函数参数-数组元素和数组名"><a href="#7-7数组作为函数参数-数组元素和数组名" class="headerlink" title="7.7数组作为函数参数(数组元素和数组名)"></a>7.7数组作为函数参数(数组元素和数组名)</h1><ul><li>调用有参函数时，需要提供实参。</li><li>实参可以是常量、变量、表达式。</li><li>数组元素和数组名也可以作为函数的实参。</li></ul><h2 id="一、数组元素作为函数参数"><a href="#一、数组元素作为函数参数" class="headerlink" title="一、数组元素作为函数参数"></a>一、数组元素作为函数参数</h2><ul><li>与变量作用相当，凡是变量可以出现的地方，都可以用数组元素代替。</li><li>数组元素<strong>只可以作为函数的实参，不可以用作形参。</strong><ul><li>因为形参是在函数被调用时临时分配存储单元的，不可能为一个数组元素单独分配存储单元。</li><li>而实参的传递是单向值传递。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//已知10个三角形的三边长,求它们的面积。</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">float</span> <span class="title function_">area</span><span class="params">(<span class="type">float</span> a,<span class="type">float</span> b,<span class="type">float</span> c)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> p,s;</span><br><span class="line">    p = (a+b+c)/<span class="number">2</span>;</span><br><span class="line">    s = <span class="built_in">sqrt</span>(p*(p-a)*(p-b)*(p-c));</span><br><span class="line">    <span class="keyword">return</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    floata[<span class="number">10</span>],b[<span class="number">10</span>],c[<span class="number">10</span>],s[<span class="number">10</span>];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f%f%f&quot;</span>,&amp;a[i],&amp;b[i],&amp;c[i]);</span><br><span class="line">        s[i]=area(a[i],b[i],c[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;s[%d]=%f\n&quot;</span>,i+<span class="number">1</span>,s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="二、数组名作为函数参数"><a href="#二、数组名作为函数参数" class="headerlink" title="二、数组名作为函数参数"></a>二、数组名作为函数参数</h2><h3 id="1、一维数组名作为函数参数"><a href="#1、一维数组名作为函数参数" class="headerlink" title="1、一维数组名作为函数参数"></a>1、一维数组名作为函数参数</h3><ul><li>数组名既可以作形参，也可以作实参。</li><li>数组名表示的是数组第一个元素的地址</li><li>形参数组可以不指定大小，但在定义数组时，需要在数组名后加上一个空的方括号<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> <span class="title function_">average</span><span class="params">(<span class="type">float</span> <span class="built_in">array</span>[])</span>          <span class="comment">//定义average函数，形参数组不指定大小</span></span><br></pre></td></tr></table></figure></li><li>由于用数组名作函数实参时，不是把数组元素的值传给形参，而是把实参数组的首元素地址传递给形参数组，因此这两个数组共用一段内存单元。即形参数组中各元素的值如果发生了变化，会使实参数组元素的值同时发生变化。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//形参和实参共享一段内存单元</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> b[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i] = <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    fun(a);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、多维数组名作函数参数"><a href="#2、多维数组名作函数参数" class="headerlink" title="2、多维数组名作函数参数"></a>2、多维数组名作函数参数</h3><ul><li>多维数组元素可以作为函数参数，在被调用函数中，对形参数组定义时，可以指定每一维大小，也可省略第一维大小。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一下两种均合法</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="built_in">array</span>[<span class="number">3</span>][<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> <span class="built_in">array</span>[][<span class="number">10</span>];</span><br></pre></td></tr></table></figure></li><li>但不能将2为或更高维的大小省略<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误示范</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="built_in">array</span>[][]</span><br><span class="line"><span class="type">int</span> <span class="built_in">array</span>[<span class="number">3</span>][]</span><br></pre></td></tr></table></figure></li><li>第二维大小相同的前提下，形参数组第一维可以与实参数组不同<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">实参数组定义：<span class="type">int</span> score[<span class="number">5</span>][<span class="number">10</span>];</span><br><span class="line">形参数组定义：<span class="type">int</span> <span class="built_in">array</span>[][<span class="number">10</span>];  或  <span class="type">int</span> <span class="built_in">array</span>[<span class="number">8</span>][<span class="number">10</span>];</span><br></pre></td></tr></table></figure></li></ul><h1 id="7-8局部变量和全局变量"><a href="#7-8局部变量和全局变量" class="headerlink" title="7.8局部变量和全局变量"></a>7.8局部变量和全局变量</h1><ul><li>量必须先定义，后使用</li><li>在一个函数中定义的变量，在其他函数中能否被引用？&#x3D;&#x3D;&#x3D;&#x3D;》<strong>作用域</strong></li><li>在<strong>函数内</strong>定义的变量是<strong>局部变量</strong>，在<strong>函数外</strong>定义的变量是<strong>外部变量</strong>，<strong>外部变量</strong>是<strong>全局变量</strong></li></ul><h2 id="1、定义变量的三种情况"><a href="#1、定义变量的三种情况" class="headerlink" title="1、定义变量的三种情况"></a>1、定义变量的三种情况</h2><ul><li>在函数开头定义（作用范围：从定义处开始至本函数结束）局部变量</li><li>在函数内的复合语句内定义（作用范围：本复合语句范围内）局部变量</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">1</span>,b=<span class="number">2</span>;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> c;</span><br><span class="line">        c = a+b;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,c);              <span class="comment">//可以输出</span></span><br><span class="line">    &#125;                             <span class="comment">//c的作用范围仅限于该复合语句块内</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,c);                 <span class="comment">//会报错，显示c未被定义</span></span><br><span class="line">    return0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在函数的外部定义（作用范围：从定义变量的位置开始到本源文件结束）外部变量</li></ul><h2 id="2、其他注意事项"><a href="#2、其他注意事项" class="headerlink" title="2、其他注意事项"></a>2、其他注意事项</h2><ul><li>在一个函数中既可以使用本函数中的局部变量，也可以使用有效的全局变量</li><li>设置全局变量可以增加函数间数据联系的渠道，但也因此如果在一个函数中改变了全局变量的值，</li><li>就会影响到其他函数全局变量的值。</li><li>因函数调用只能带回一个函数返回值，因此有时可以利用全局变量得到一个以上的值。</li><li>不成文的规定：将全局变量首字母大写</li><li>非必要不使用全局变量<ul><li>长时间占用存储空间</li><li>函数通用性降低<ul><li>增加了耦合性（各函数之间关联变多）</li><li>移植性差</li></ul></li><li>降低了清晰性</li></ul></li><li>若在同一个源文件中，全局变量和局部变量同名，在局部变量的作用范围内，全局变量会被屏蔽。</li></ul><h1 id="7-9变量的存储方式和生存期"><a href="#7-9变量的存储方式和生存期" class="headerlink" title="7.9变量的存储方式和生存期"></a>7.9变量的存储方式和生存期</h1><ul><li>从变量值的存在时间（生存期）来看，变量的存储可以分为<strong>静态存储方式</strong>和<strong>动态存储方式</strong>。<ul><li>静态存储方式：程序运行期间由系统分配固定的存储空间（全局变量全部存放在静态存储区中）</li><li>动态存储方式：程序运行期间，根据需要动态的分配存储空间。（函数形参，自动变量，函数调用时的现场保护和返回地址）</li></ul></li></ul><h2 id="一、局部变量的存储类别"><a href="#一、局部变量的存储类别" class="headerlink" title="一、局部变量的存储类别"></a>一、局部变量的存储类别</h2><h3 id="1、自动变量（auto）"><a href="#1、自动变量（auto）" class="headerlink" title="1、自动变量（auto）"></a>1、自动变量（auto）</h3><ul><li>特点：在调用该函数时，系统会给这些变量分配存储空间，在函数调用结束时就自动释放这些存储空间</li><li>函数中的形参和在函数中定义的局部变量都属于自动变量<ul><li>不写auto则隐含指定为自动存储类别<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fac</span><span class="params">(<span class="type">int</span> a)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">auto</span> <span class="type">int</span> b,c=<span class="number">3</span>;             <span class="comment">//与intb,c=3;完全等价</span></span><br><span class="line">    .....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="2、静态局部变量（static）"><a href="#2、静态局部变量（static）" class="headerlink" title="2、静态局部变量（static）"></a>2、静态局部变量（static）</h3><ul><li>特点：函数中局部变量的值在函数调用结束后不消失而继续保留原值，在下一次调用该函数时，该变量已有值。</li></ul><h3 id="3、寄存器变量（register）"><a href="#3、寄存器变量（register）" class="headerlink" title="3、寄存器变量（register）"></a>3、寄存器变量（register）</h3><ul><li>对于一些频繁使用的变量，可将其存储在具有高速存取速率的寄存器中，这种变量叫寄存器变量<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">register</span> <span class="type">int</span> f;</span><br></pre></td></tr></table></figure></li><li>目前已不需要，遇到能看懂即可。</li></ul><h2 id="二、全局变量的存储类别"><a href="#二、全局变量的存储类别" class="headerlink" title="二、全局变量的存储类别"></a>二、全局变量的存储类别</h2><p><strong>1、在一个文件内扩展外部变量的作用域(extern关键字)</strong><br><strong>2、将外部变量的作用域扩展到其他文件(extern关键字)</strong><br><strong>3、将外部变量的作用域限制在本文件中(定义变量时加上static声明)</strong></p><ul><li>对局部变量用static声明，把它分配在静态存储区，该变量在整个程序执行期间不释放，其所分配的空间始终存在。<br>*对全局变量用static声明，则该变量的唑酮与只限于本文件模块（即被声明的文件中）。</li></ul><h1 id="7-10关于变量的声明和定义"><a href="#7-10关于变量的声明和定义" class="headerlink" title="7.10关于变量的声明和定义"></a>7.10关于变量的声明和定义</h1><h2 id="1、对于函数而言"><a href="#1、对于函数而言" class="headerlink" title="1、对于函数而言"></a>1、对于函数而言</h2><ul><li>函数的声明时函数的原型，函数的定义是对函数功能的定义。</li></ul><h2 id="2、对变量而言"><a href="#2、对变量而言" class="headerlink" title="2、对变量而言"></a>2、对变量而言</h2><p>*建立存储空间的声明称为定义，不建立存储空间的声明称为声明。</p><h1 id="7-11内部函数和外部函数"><a href="#7-11内部函数和外部函数" class="headerlink" title="7.11内部函数和外部函数"></a>7.11内部函数和外部函数</h1><ul><li>根据函数能否被其他源文件调用，将函数区分为内部函数和外部函数</li></ul><h2 id="一、内部函数（静态函数）"><a href="#一、内部函数（静态函数）" class="headerlink" title="一、内部函数（静态函数）"></a>一、内部函数（静态函数）</h2><p>如果一个函数只能被本文件中其他函数所调用，则称为内部函数。定义内部函数时，在函数名和函数类型的前面加static，即</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> 类型名 函数名(形参名）</span><br></pre></td></tr></table></figure><h2 id="2、外部函数"><a href="#2、外部函数" class="headerlink" title="2、外部函数"></a>2、外部函数</h2><p>如果在定义函数时，在函数首部的左端加关键字extern，则此函数时外部函数，可供其他文件调用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span><br></pre></td></tr></table></figure><p>若在定义时省略extern，则默认为外部函数</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言(第八章-善于利用指针)</title>
      <link href="/2022/12/01/c_language_8/"/>
      <url>/2022/12/01/c_language_8/</url>
      
        <content type="html"><![CDATA[<h1 id="8-1-指针是什么"><a href="#8-1-指针是什么" class="headerlink" title="8.1 指针是什么"></a>8.1 指针是什么</h1><h2 id="1、了解数据在内存中如何存取"><a href="#1、了解数据在内存中如何存取" class="headerlink" title="1、了解数据在内存中如何存取"></a>1、了解数据在内存中如何存取</h2><ul><li>定义变量后，系统会为该变量分配内存单元。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> i=<span class="number">5</span>; <span class="comment">//编译系统根据所定义变量类型（int）分配4个字节的存储空间供使用，且该存</span></span><br><span class="line">储空间的名字为i，内部存储数据为<span class="number">5</span>；</span><br></pre></td></tr></table></figure></li><li>内存中每一个字节都有一个编号——》地址<ul><li>根据地址能定位至内存中的某一确定位置</li></ul></li><li>使用地址和变量名均可访问到数据（即对内存中数据的访问有两种形式：直接访问和间接访问）<ul><li>直接访问：按变量名存取变量值（知道房间名，直接看门牌去）</li><li>间接访问：通过存放变量地址的变量去访问变量。（不知道房间名，也不知道地址，询问服务人员得知在2楼第1间，进入房间）</li></ul></li></ul><p>举例：<br><img src="https://s1.vika.cn/space/2022/12/01/db0523ab80ff4e09973fbc6332acd4ed" alt="1.jpg"></p><h2 id="2、什么是指针"><a href="#2、什么是指针" class="headerlink" title="2、什么是指针"></a>2、什么是指针</h2><ul><li>指针：地址</li><li>指针变量：专门用来存放另一变量的地址（指针）的变量。<ul><li>区分指针和指针变量<ul><li>指针变量中存放指针</li><li>指针是一个具体的地址</li></ul></li></ul></li></ul><h2 id="8-2-指针变量"><a href="#8-2-指针变量" class="headerlink" title="8.2 指针变量"></a>8.2 指针变量</h2><h3 id="1、定义指针变量"><a href="#1、定义指针变量" class="headerlink" title="1、定义指针变量"></a>1、定义指针变量</h3><ul><li>定义指针的一般形式<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">类型名 *指针变量名</span><br><span class="line"><span class="type">int</span> *p;                 <span class="comment">//定义一个指针变量p，规定其可以指向整型变量。</span></span><br></pre></td></tr></table></figure></li></ul><p>注意事项：</p><div class="note red modern"><p>指针变量前面的”*”表示该变量为指针型变量，指针变量名是p，而不是 *p。</p><p>在定义指针变量时必须指定<strong>基类型</strong>（因为不同类型的数据在内存中所占的字节数和存放方式是不同的）<br>指向整形数据的指针类型表示为“int*”，读作指向int的指针，或 int指针</p><p>指针变量中只能存放地址（指针），试图将一个整数赋给一个指针变量是不合法的。</p></div><h3 id="2、引用指针变量"><a href="#2、引用指针变量" class="headerlink" title="2、引用指针变量"></a>2、引用指针变量</h3><ul><li><p>给指针变量赋值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p = &amp;a;                 <span class="comment">//把a的地址赋给指针变量p；</span></span><br></pre></td></tr></table></figure></li><li><p>引用指针变量指向的变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p = &amp;a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*p); <span class="comment">//输出p所指向的变量的值，即a的值，*p的使用与a相同</span></span><br></pre></td></tr></table></figure></li><li><p>引用指针变量的值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%o&quot;</span>,p); <span class="comment">//以八进制输出指针变量p的值，p指向a，则输出a的地址</span></span><br></pre></td></tr></table></figure></li><li><p><strong>强调两个运算符。</strong></p></li></ul><blockquote><p>“&amp;”取地址运算符 &amp;a是变量a的地址<br>“*” 指针运算符（间接访问运算符） *p代表指针变量p指向的对象</p></blockquote><p>例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">50</span> , *p ;</span><br><span class="line">    p=&amp;a ;</span><br><span class="line">    *p=<span class="number">100</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d, %d, %o\n&quot;</span>, a, *p, p);               <span class="comment">//100, 100, 30577024</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%o, %o\n&quot;</span>,&amp;*p, &amp;a);              <span class="comment">//30577024, 30577024</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d, %d\n&quot;</span>,*&amp;a, *p);                 <span class="comment">//100, 100</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、指针变量作为函数参数"><a href="#3、指针变量作为函数参数" class="headerlink" title="3、指针变量作为函数参数"></a>3、指针变量作为函数参数</h3><p>以输入a和b两个整数，按大小顺序输出为例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123; </span><br><span class="line">    int *p1, *p2, *p, a, b;</span><br><span class="line">    scanf(&quot;%d, %d&quot;, &amp;a, &amp;b);</span><br><span class="line">    p1=&amp;a; p2=&amp;b;</span><br><span class="line">    if ( a&lt;b )</span><br><span class="line">     &#123;</span><br><span class="line">        p=p1; p1=p2; p2=p;</span><br><span class="line">     &#125;</span><br><span class="line">    printf(&quot;a=%d, b=%d\n&quot;, a, b);</span><br><span class="line">    printf(&quot;max=%d, min=%d\n&quot;, *p1, *p2);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//a=5 , b=7</span><br><span class="line">//max=7 , min=5</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    t=x; x=y; y=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">( )</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="keyword">if</span> ( a&lt;b ) </span><br><span class="line">        swap(a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>, a,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//5,7</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *p1, <span class="type">int</span> *p2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> *p;</span><br><span class="line">    p=p1; p1=p2; p2=p; &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">( )</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">int</span> a, b, *pa, *pb;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d, %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    pa=&amp;a; pb=&amp;b;</span><br><span class="line">    <span class="keyword">if</span> ( a&lt;b ) </span><br><span class="line">        swap(pa, pb);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>,*pa,*pb);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//5, 7</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *p1, <span class="type">int</span> *p2)</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">int</span> *p; <span class="comment">//加上int c; p=&amp;c; 即可成功</span></span><br><span class="line">    *p=*p1; *p1=*p2; *p2=*p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">( )</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">int</span> a, b, *pa, *pb;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d, %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    pa=&amp;a; pb=&amp;b;</span><br><span class="line">    <span class="keyword">if</span> ( a&lt;b ) </span><br><span class="line">        swap(pa, pb);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d, %d\n&quot;</span>, a, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Run-Time Check Failure #3 - The variable &#x27;p&#x27; is being used without being initialized.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *p1, <span class="type">int</span> *p2)</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">int</span> p;</span><br><span class="line">    p=*p1; *p1=*p2; *p2=p; &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">( )</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">int</span> a, b, *pa =&amp;a, *pb =&amp;b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d, %d&quot;</span>, pa, pb);</span><br><span class="line">    <span class="keyword">if</span> ( a&lt;b ) </span><br><span class="line">        swap(pa, pb);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d, %d\n&quot;</span>, a, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//7, 5</span></span><br></pre></td></tr></table></figure><ul><li><strong>函数调用不能改变实参指针变量的值，但可以改变其所指向的变量的值。</strong></li><li>主调函数和被调函数之间数值传递的方式<ul><li>实参—-&gt;形参的数据传递；return语句。</li><li>全局变量。</li><li>形参为指针。</li><li>函数参数（形参或实参）为数组名或指针</li></ul></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> *c,<span class="type">int</span> *d)</span></span><br><span class="line">&#123; *c=a+b ; *d=a-b ; &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">( )</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">int</span> x , y , z , w ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>,&amp;x , &amp;y ) ;</span><br><span class="line">    fun( x , y, &amp;z , &amp;w ) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span> , z , w ) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="8-3-通过指针引用数组"><a href="#8-3-通过指针引用数组" class="headerlink" title="8.3 通过指针引用数组"></a>8.3 通过指针引用数组</h1><ul><li>关于数组<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>];                           <span class="comment">//定义一个长度为5的整型数组，内含5个数组元素：</span></span><br><span class="line">a[<span class="number">0</span>],a[<span class="number">1</span>],a[<span class="number">2</span>],a[<span class="number">3</span>],a[<span class="number">4</span>]  </span><br><span class="line">                                      <span class="comment">//对于数组元素的引用与普通变量相同</span></span><br><span class="line">                                      <span class="comment">//数组名a代表数组中首个元素的地址，即a[0]的地址</span></span><br></pre></td></tr></table></figure>更多关于数组<a href="https://watchdogs-x.github.io/2022/11/22/c_language_6/">点此跳转</a></li></ul><h2 id="1、数组元素的指针"><a href="#1、数组元素的指针" class="headerlink" title="1、数组元素的指针"></a>1、数组元素的指针</h2><ul><li>指针变量既然可以指向变量，自然也可以指向数组元素。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inta[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;<span class="comment">//定义a为包含5个整型数据的数组</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>*p;               <span class="comment">//定义p为指向整型变量的指针变量</span></span><br><span class="line">p=&amp;a[<span class="number">0</span>];         <span class="comment">//把a[0]元素的地址赋给指针变量</span></span><br></pre></td></tr></table></figure>等价于<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>*p=&amp;a[<span class="number">0</span>];<span class="comment">//定义时直接进行初始化</span></span><br></pre></td></tr></table></figure>等价于<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>*p=a;<span class="comment">//因为数组名a代表的就是&amp;a[0]</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="2、在引用数组元素时的指针运算"><a href="#2、在引用数组元素时的指针运算" class="headerlink" title="2、在引用数组元素时的指针运算"></a>2、在引用数组元素时的指针运算</h2><p><strong>运算：数据的加减乘除</strong><br><strong>指针是内存地址编号，运算的意义？</strong><br><strong>一定条件下，允许对指针进行加减运算。</strong><br><strong>该条件指：指针指向数组元素。</strong></p><ul><li>如果指针变量p已指向数组中的某个元素<br>  *p+1指向数组中该元素的下一个元素&#x2F;&#x2F;指针运算中加减的数值是默认乘以（该数据类型所占内存字节数）之后参与运算的<ul><li>p-1指向数组中该元素的上一个元素</li><li>p++,++p,p–,–p,+&#x3D;,-&#x3D;均是合法运算</li><li>的初值未&amp;a[0]，则p+i和a+i就是数组元素a[i]的地址。</li><li><em>(p+i)或</em>(a+i)就是p+i或a+i所指向的数组元素</li><li>若指针p和q均指向同一数组中的元素，则执行p-q，所得结果表示两者所指元素中间的差值个数。<br>  *p+q无意义。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">3</span>]=&#123;<span class="number">100</span>,<span class="number">200</span>,<span class="number">300</span>&#125;;</span><br><span class="line">    <span class="type">int</span> *p=a;                <span class="comment">//等价于int*p=&amp;a[0];</span></span><br><span class="line">    <span class="type">int</span> *q=&amp;a[<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*p);                   <span class="comment">//100</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*(p+<span class="number">2</span>));             <span class="comment">//300</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*(q<span class="number">-1</span>));              <span class="comment">//100</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*(a+<span class="number">2</span>));             <span class="comment">//300</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,q-p);                 <span class="comment">//1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="3、通过指针引用数组元素"><a href="#3、通过指针引用数组元素" class="headerlink" title="3、通过指针引用数组元素"></a>3、通过指针引用数组元素</h2><ul><li>引用一个数组元素，可以用下面两种方法：<ul><li>下标法a[i]</li><li>指针法*(a+i)或*(p+i)&#x2F;&#x2F;a是数组名，p是指向数组中首元素的指针变量。<br>查看课本P231页例8.6</li></ul></li></ul><div class="note red modern"><p><strong>注意：</strong></p><ul><li>可以通过改变指针变量的值指向不同的元素例p++，但需注意不能通过数组名a变化的方法，因为数组名a为一个指针型常量。</li><li>使用指针变量时，需要注意指针变量的当前值。</li></ul></div><h2 id="4、用数组名做函数参数"><a href="#4、用数组名做函数参数" class="headerlink" title="4、用数组名做函数参数"></a>4、用数组名做函数参数</h2><ul><li>就第七章所学，当用数组名做参数时，形参数组中各元素值发生改变，实参数组元素值随之变化作解释</li><li>实参数组名代表该数组首元素地址</li><li>形参用来接收从实参传递过来的数组首元素地址。</li><li>因此，形参是一个指针变量（因为只有指针变量才能存放地址）</li><li>实际上，C编译将形参数组名作为指针变量来处理。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun(<span class="type">int</span> arr[],<span class="type">int</span> n);        <span class="comment">//等效于fun(int *arr,int n);</span></span><br></pre></td></tr></table></figure></li><li>实参数组名代表一个固定的地址，或者说是指针常量，但形参数组名并不是一个固定的地址，而是按指针变量处理。因此在函数执行期间，它可以再被赋值。</li></ul><p><strong>若有一个实参数组，要想在函数中改变此数组中元素的值，实参与形参对应关系有以下四种情况：</strong></p><ul><li>形参和实参都用数组名<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> b[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i]=<span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    fun(a);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>实参用数组名，形参用指针变量<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span>*b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        *(b+i)=<span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    fun(a);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>实参形参都用指针变量<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span>*b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        *(b+i)=<span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> *p;</span><br><span class="line">    p=a;</span><br><span class="line">    fun(p);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>实参为指针变量，形参为数组名<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> b[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">       b[i]=<span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> *p;</span><br><span class="line">    p=a;</span><br><span class="line">    fun(p);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="8-4-通过指针引用字符串"><a href="#8-4-通过指针引用字符串" class="headerlink" title="8.4 通过指针引用字符串"></a>8.4 通过指针引用字符串</h1><h2 id="1、引用字符串的两种方法："><a href="#1、引用字符串的两种方法：" class="headerlink" title="1、引用字符串的两种方法："></a>1、引用字符串的两种方法：</h2><ul><li>字符数组内存放字符串，用数组名和%s输出</li><li>用字符指针变量指向一个字符串常量，通过字符指针变量引用字符串常量。</li></ul><h2 id="2、字符指针作函数参数"><a href="#2、字符指针作函数参数" class="headerlink" title="2、字符指针作函数参数"></a>2、字符指针作函数参数</h2><p><strong>实参与形参对应关系有以下四种情况</strong></p><ul><li>形参和实参都用字符数组名</li><li>实参用数组名，形参用字符指针变量</li><li>实参形参都用指针变量</li><li>实参为指针变量，形参为字符数组名</li></ul><h2 id="3、使用字符指针变量和字符数组的比较"><a href="#3、使用字符指针变量和字符数组的比较" class="headerlink" title="3、使用字符指针变量和字符数组的比较"></a>3、使用字符指针变量和字符数组的比较</h2>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言(第六章-利用数组批量处理数据)</title>
      <link href="/2022/11/22/c_language_6/"/>
      <url>/2022/11/22/c_language_6/</url>
      
        <content type="html"><![CDATA[<p><strong>学习目标：</strong></p><ul><li>1、一维数组、二维数组、字符数组的定义、引用、初始化</li><li>2、利用数组批量处理数据。</li></ul><h1 id="一、数组的概念"><a href="#一、数组的概念" class="headerlink" title="一、数组的概念"></a>一、数组的概念</h1><p>1.数组是一组有序数据的集合</p><p>2.数组中每一个元素都属于同一个数据类型</p><h1 id="二、一维数组"><a href="#二、一维数组" class="headerlink" title="二、一维数组"></a>二、一维数组</h1><h2 id="1、定义"><a href="#1、定义" class="headerlink" title="1、定义"></a>1、定义</h2><ul><li>类型关键字数组名[常量表达式]<ul><li>类型关键字：int、float等</li><li>数组名：遵循标识符命名规则<ul><li>不允许使用C语言中的关键字</li><li>由字母、数字、下划线组成，且首字母必须为字母或下划线，不能为数字</li></ul></li><li>[]不是【】</li><li>常量表达式<ul><li>inta[5]</li><li>inta[3+2]</li><li>inta[N]&#x2F;&#x2F;N是提前声明的符号常量</li></ul></li></ul></li></ul><h2 id="2、引用"><a href="#2、引用" class="headerlink" title="2、引用"></a>2、引用</h2><p> 数组名[下标]</p><p> 例：a[4]&#x2F;&#x2F;引用数组中第五个元素</p><h2 id="3、初始化"><a href="#3、初始化" class="headerlink" title="3、初始化"></a>3、初始化</h2><ul><li>在定义数组时，对数组元素赋初值</li><li>int a[6]&#x3D;{1,2,3,4,5,6};</li><li>可只给一部分数组元素赋初值，未赋值部分默认为0</li><li>int a[6]&#x3D;{1,2,3};</li><li>未赋初值的数组，各元素值不确定（取决于不同的编译器）</li></ul><p><img src="https://s1.vika.cn/space/2022/12/01/1f523d8a397748c7ae677d10ba23bf32" alt="1.jpg"><br><img src="https://s1.vika.cn/space/2022/12/01/eec040da2c894d8282429cfddaccdb6d" alt="2.jpg"></p><ul><li><p>初始化的数据个数确定时可以省略数组长度。</p><ul><li>例：inta[]&#x3D;{1,2,3};</li></ul></li><li><p>数组中全部元素初始化为0。</p><ul><li>例：inta[6]&#x3D;{0};</li></ul></li></ul><h2 id="4、一维数组使用示例-x2F-x2F-输出斐波那契数列前30个数"><a href="#4、一维数组使用示例-x2F-x2F-输出斐波那契数列前30个数" class="headerlink" title="4、一维数组使用示例&#x2F;&#x2F;输出斐波那契数列前30个数"></a>4、一维数组使用示例&#x2F;&#x2F;输出斐波那契数列前30个数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> f[<span class="number">30</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>&#125;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\t%d\t&quot;</span>,f[<span class="number">0</span>],f[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;<span class="number">30</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            f[i]=f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>];</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,f[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、排序算法"><a href="#5、排序算法" class="headerlink" title="5、排序算法"></a>5、排序算法</h2><p>参考：<a href="https://www.cnblogs.com/onepixel/p/7674659.html">https://www.cnblogs.com/onepixel/p/7674659.html</a></p><p>交换排序：所谓交换，就是根据序列中两个记录键值的比较结果来对换这两个记录在序列中的位置，交换排序的特点是：将键值较大的记录向序列的尾部移动，键值较小的记录向序列的前部移动。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(i=j+<span class="number">1</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[j]&gt;a[i])</span><br><span class="line">        &#123;t=a[j];a[j]=a[i];a[i]=t;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">### 选择排序</span><br><span class="line">* 原理：假设长度为n的数组arr，要按照从小到大排序，那么先从n个数字中找到最小值min1，如果最小值min1的位置不在数组的最左端(也就是min1不等于arr[<span class="number">0</span>])，则将最小值min1和arr[<span class="number">0</span>]交换，接着在剩下的n<span class="number">-1</span>个数字中找到最小值min2，如果最小值min2不等于arr[<span class="number">1</span>]，则交换这两个数字，依次类推，直到数组arr有序排列。</span><br><span class="line">* 步骤：</span><br><span class="line">    <span class="number">1.</span>首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置。</span><br><span class="line">    <span class="number">2.</span>再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。</span><br><span class="line">    <span class="number">3.</span>重复第二步，直到所有元素均排序完毕。</span><br><span class="line"></span><br><span class="line">```C</span><br><span class="line"><span class="title function_">for</span><span class="params">(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(k=j;i=j+<span class="number">1</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[k]&gt;a[i])</span><br><span class="line">            k=i;</span><br><span class="line">    <span class="keyword">if</span>(k!=j)</span><br><span class="line">        &#123;t=a[k],a[k]=a[j];a[j]=t&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="冒泡排序："><a href="#冒泡排序：" class="headerlink" title="冒泡排序："></a>冒泡排序：</h3><ul><li>原理：假设长度为n的数组arr，要按照从小到大排序。则冒泡排序的具体过程可以描述为：首先从数组的第一个元素开始到数组最后一个元素为止，对数组中相邻的两个元素进行比较，如果位于数组左端的元素大于数组右端的元素，则交换这两个元素在数组中的位置。这样操作后数组最右端的元素即为该数组中所有元素的最大值。接着对该数组除最右端的n-1个元素进行同样的操作，再接着对剩下的n-2个元素做同样的操作，直到整个数组有序排列。</li><li>步骤：<br>1、比较相邻的元素。如果第一个比第二个大，就交换他们两个。<br>2、对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元<br>素应该会是最大的数。<br>3、针对所有的元素重复以上的步骤，除了最后一个。<br>4、持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>-j;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;a[i+<span class="number">1</span>])</span><br><span class="line">        &#123;......&#125;</span><br></pre></td></tr></table></figure><h1 id="3、二维数组"><a href="#3、二维数组" class="headerlink" title="3、二维数组"></a>3、二维数组</h1><h2 id="1、定义-1"><a href="#1、定义-1" class="headerlink" title="1、定义"></a>1、定义</h2><div class="note blue modern"><p>类型关键字 数组名[常量表达式1][常量表达式2]</p></div><p>例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line"><span class="type">float</span> b[<span class="number">5</span>][<span class="number">10</span>];</span><br></pre></td></tr></table></figure><h2 id="2、引用-1"><a href="#2、引用-1" class="headerlink" title="2、引用"></a>2、引用</h2><div class="note blue modern"><p>数组名[下标1][下标2]</p></div><p>例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a[<span class="number">0</span>][<span class="number">0</span>]     a[<span class="number">0</span>][<span class="number">1</span>]     a[<span class="number">0</span>][<span class="number">2</span>]     a[<span class="number">0</span>][<span class="number">3</span>]</span><br><span class="line">a[<span class="number">1</span>][<span class="number">0</span>]     a[<span class="number">1</span>][<span class="number">1</span>]     a[<span class="number">1</span>][<span class="number">2</span>]     a[<span class="number">1</span>][<span class="number">3</span>]</span><br><span class="line">a[<span class="number">2</span>][<span class="number">0</span>]     a[<span class="number">2</span>][<span class="number">1</span>]     a[<span class="number">2</span>][<span class="number">2</span>]     a[<span class="number">2</span>][<span class="number">3</span>]</span><br></pre></td></tr></table></figure><h2 id="3、初始化-1"><a href="#3、初始化-1" class="headerlink" title="3、初始化"></a>3、初始化</h2><h3 id="1、分行初始化"><a href="#1、分行初始化" class="headerlink" title="1、分行初始化"></a>1、分行初始化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">2</span>][<span class="number">3</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="2、按存放数据整体初始化"><a href="#2、按存放数据整体初始化" class="headerlink" title="2、按存放数据整体初始化"></a>2、按存放数据整体初始化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">2</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="3、部分元素初始化"><a href="#3、部分元素初始化" class="headerlink" title="3、部分元素初始化"></a>3、部分元素初始化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">3</span>]=&#123;&#123;<span class="number">1</span>&#125;,&#123;&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="4、省略第一维初始化"><a href="#4、省略第一维初始化" class="headerlink" title="4、省略第一维初始化"></a>4、省略第一维初始化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[][<span class="number">3</span>]=&#123;&#123;<span class="number">1</span>&#125;,&#123;&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="3、输入输出"><a href="#3、输入输出" class="headerlink" title="3、输入输出"></a>3、输入输出</h2><h3 id="1、输入"><a href="#1、输入" class="headerlink" title="1、输入"></a>1、输入</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>,j&lt;<span class="number">4</span>;j++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br></pre></td></tr></table></figure><h3 id="2、输出"><a href="#2、输出" class="headerlink" title="2、输出"></a>2、输出</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>,j&lt;<span class="number">4</span>;j++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a[i][j]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="四、字符数组"><a href="#四、字符数组" class="headerlink" title="四、字符数组"></a>四、字符数组</h1><p><strong>1、C语言中没有表示字符串的类型，也没有字符串变量，字符串用字符数组来存放。</strong><br><strong>2、字符型数据以字符的ASCII码存放在存储单元中，一般占一个字节。</strong></p><h2 id="1、定义-2"><a href="#1、定义-2" class="headerlink" title="1、定义"></a>1、定义</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> c[<span class="number">10</span>],a[<span class="number">5</span>];</span><br></pre></td></tr></table></figure><h2 id="2、初始化"><a href="#2、初始化" class="headerlink" title="2、初始化"></a>2、初始化</h2><ul><li><p>字符常量初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> c[<span class="number">6</span>]=&#123;<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;!&#x27;</span>&#125;;             <span class="comment">//sizeof(c)=6</span></span><br><span class="line"><span class="type">char</span> c[]=&#123;<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;!&#x27;</span>&#125;;              <span class="comment">//提供初值个数与定义数组长度相同，可省略长度</span></span><br><span class="line"><span class="type">char</span> c[]=&#123;<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;!&#x27;</span>,<span class="string">&#x27;\0&#x27;</span>&#125;;           <span class="comment">//sizeof(c)=7</span></span><br></pre></td></tr></table></figure></li><li><p>字符串常量初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> c[]=&#123;<span class="string">&quot;Happy!&quot;</span>&#125;;             <span class="comment">//sizeof(c)=7因为字符串末尾自动加一个&#x27;\0&#x27;</span></span><br><span class="line"><span class="type">char</span> c[]=<span class="string">&quot;Happy&quot;</span>;</span><br><span class="line"><span class="comment">//等同于charc[]=&#123;&#x27;H&#x27;,&#x27;a&#x27;,&#x27;p&#x27;,&#x27;p&#x27;,&#x27;y&#x27;,&#x27;!&#x27;,&#x27;\0&#x27;&#125;;</span></span><br><span class="line"><span class="comment">//不同于charc[]=&#123;&#x27;H&#x27;,&#x27;a&#x27;,&#x27;p&#x27;,&#x27;p&#x27;,&#x27;y&#x27;,&#x27;!&#x27;&#125;;</span></span><br></pre></td></tr></table></figure></li><li><p>关于’\0’</p></li></ul><div class="note blue modern"><p>C系统在用字符数组存储字符串常量时，会自动在末尾加一个’\0’作为结束符</p><p>字符数组并不要求它的最后一个字符为’\0‘，因此charc[6]&#x3D;{‘H’,’a’,’p’,’p’,’y’,’!’};完全合法</p><p>由于系统在处理在字符串常量时会自动加’\0’，为了一致及方便，通常处理时，人为的也加上’\0’</p></div><h2 id="3、引用"><a href="#3、引用" class="headerlink" title="3、引用"></a>3、引用</h2><ul><li>单个元素的引用</li></ul><div class="note blue modern"><p>允许引用单个字符元素，输入或输出一个字符。</p></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> c[<span class="number">7</span>]= <span class="string">&quot;happy!&quot;</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c[<span class="number">2</span>]);              <span class="comment">//对c[2]元素赋一个字符</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c[<span class="number">3</span>]);               <span class="comment">//输出c[3]元素p</span></span><br></pre></td></tr></table></figure><div class="note blue modern"><p>以字符串形式进行输入输出</p></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> c[<span class="number">7</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,c);              <span class="comment">//注意此处不加&amp;因为在C语言中，数组名代表第一个数组元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,c);             <span class="comment">//输出该字符串</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%o&quot;</span>,c);             <span class="comment">//八进制形式输出数组c的起始地址，即第一个数组元素的地址</span></span><br></pre></td></tr></table></figure><div class="note blue modern"><p>如果利用一个scanf函数输入多个字符串，应在输入时，以空格隔开</p></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> a[<span class="number">5</span>],b[<span class="number">5</span>],c[<span class="number">5</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%s%s&quot;</span>,a,b,c);              <span class="comment">//输入How are you分别将三个单词赋给a,b,c三个数组，注意：</span></span><br><span class="line">输入格式控制中间没有空格</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s%s%s&quot;</span>,a,b,c);             <span class="comment">//输出How are you</span></span><br></pre></td></tr></table></figure><h2 id="4、使用字符串处理函数"><a href="#4、使用字符串处理函数" class="headerlink" title="4、使用字符串处理函数"></a>4、使用字符串处理函数</h2><ul><li><p>put(字符数组)<br>  将一个字符串输出到终端<br>  作用等效于printf(“%s”,c);也可以输出转义字符<br><img src="https://s1.vika.cn/space/2022/12/01/1aede231c9b74806b62f3f93416083af" alt="3.jpg"></p></li><li><p>gets(字符数组)<br>  从终端输入一个字符串到字符数组，并且得到一个函数值，该函数值为字符数组的起始地址。<br>  相比于scanf(“%s”,c);可以返回数组的地址值</p></li></ul><p><img src="https://s1.vika.cn/space/2022/12/01/4fee6e5fd444452a8746f3b3725475b3" alt="4.jpg"></p><ul><li>puts与gets函数都仅仅只能处理一个字符串</li><li>strcat(字符数组1,字符数组2)<br> 把字符串2接到字符串1后面，结果放到字符数组1中，函数调用后得到的函数值为字符数组1的地址</li></ul><div class="note red modern"><p>注：字符数组1的长度必须足够大，以便容纳连接后的新字符串。<br>字符数组定义及初始化时，长度不能省略。</p></div><ul><li>strcpy(字符数组1,字符串2)<br>将字符串2复制到字符数组1中去</li></ul><div class="note red modern"><p>注：字符数组1的长度不小于字符串2的长度；<br>字符数组1必须写成数组名形式，字符串2可以是字符数组名，也可以是字符串常量</p></div><ul><li><strong>strncpy(str1,str2,2)</strong></li></ul><p>将str2中最前面的两个字符复制到str1中</p><ul><li><strong>strcmp(字符串1,字符串2)</strong></li></ul><p>比较字符串1和字符串2</p><p>若相等，函数值为0；</p><p>若字符串1&gt;字符串2，函数值为一个正整数；</p><p>若字符串1&lt;字符串2，函数值为一个负整数。</p><ul><li><strong>strlen(字符数组)</strong></li></ul><p>测试字符串实际长度</p><ul><li><strong>strlwr(字符串)</strong></li></ul><p>将字符串中大写字母换成小写字母</p><ul><li><strong>strupr(字符串)</strong></li></ul><p>将字符串中的小写字母换成大写字母</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MARKDOWN笔记</title>
      <link href="/2022/11/18/notes/"/>
      <url>/2022/11/18/notes/</url>
      
        <content type="html"><![CDATA[<p>本篇文档是为了方便查看部分语法写的</p><p>内容均来自<a href="https://butterfly.js.org/">butterfly</a><br>如需查看更多，请点此链接：<a href="https://butterfly.js.org/posts/4aa8abbe/">https://butterfly.js.org/posts/4aa8abbe/</a></p><mark class="hl-label red">注意</mark> ：以下内容只适用于hexo框架butterfly主题，其他框架或主题请自行百度<h1 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h1><h2 id="note"><a href="#note" class="headerlink" title="note"></a>note</h2><div class="tabs" id="note"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note-1">用法1</button></li><li class="tab"><button type="button" data-href="#note-2">用法2（自定义icon）</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>名称</th><th>用法</th></tr></thead><tbody><tr><td>class</td><td>【可选】标识，不同的标识有不同的配色（ default &#x2F; primary &#x2F; success &#x2F; info &#x2F; warning &#x2F; danger ）</td></tr><tr><td>no-icon</td><td>【可选】不显示icon</td></tr><tr><td>style</td><td>【可选】可以覆盖配置中的 style（simple&#x2F;modern&#x2F;flat&#x2F;disabled）</td></tr></tbody></table><p><strong>实例</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note info simple %&#125;</span><br><span class="line">提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;</span><br><span class="line">提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;</span><br><span class="line">提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;</span><br><span class="line">提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note info simple"><p>提示块标签</p></div><div class="note info modern"><p>提示块标签</p></div><div class="note info flat"><p>提示块标签</p></div><div class="note info disabled"><p>提示块标签</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-2"><table><thead><tr><th>名称</th><th>用法</th></tr></thead><tbody><tr><td>color</td><td>【可选】顔色(default &#x2F; blue &#x2F; pink &#x2F; red &#x2F; purple &#x2F; orange &#x2F; green)</td></tr><tr><td>icon</td><td>【可选】可配置自定义 icon (只支持 fontawesome 图标,也可以配置 no-icon )</td></tr><tr><td>style</td><td>【可选】可以覆盖配置中的 style（simple&#x2F;modern&#x2F;flat&#x2F;disabled）</td></tr></tbody></table><p><strong>实例</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;</span><br><span class="line">2023年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2023年快到了….</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="tag-hide"><a href="#tag-hide" class="headerlink" title="tag-hide"></a>tag-hide</h2><div class="tabs" id="tag-hide"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tag-hide-1">inline</button></li><li class="tab"><button type="button" data-href="#tag-hide-2">block</button></li><li class="tab"><button type="button" data-href="#tag-hide-3">toggle</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tag-hide-1"><p>用法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideInline content,display,bg,color %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>名称</th><th>用法</th></tr></thead><tbody><tr><td>content</td><td>文本内容</td></tr><tr><td>display</td><td>按钮显示的文字（可选）</td></tr><tr><td>bg</td><td>按钮的背景颜色（可选）</td></tr><tr><td>color</td><td>按钮文字颜色（可选）</td></tr></tbody></table><p><strong>实例</strong><br>哪个英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">查看答案<br>  </button><span class="hide-content">因为西装裤(C装酷)</span></span></p><p>门里站着一个人? <span class="hide-inline"><button type="button" class="hide-button" style="">Click<br>  </button><span class="hide-content">闪</span></span></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">哪个英文字母最酷？ &#123;% hideInline 因为西装裤(C装酷),查看答案,#FF7242,#fff %&#125;</span><br><span class="line"></span><br><span class="line">门里站着一个人? &#123;% hideInline 闪 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tag-hide-2"><p>用法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>名称</th><th>用法</th></tr></thead><tbody><tr><td>content</td><td>文本内容</td></tr><tr><td>display</td><td>按钮显示的文字（可选）</td></tr><tr><td>bg</td><td>按钮的背景颜色（可选）</td></tr><tr><td>color</td><td>按钮文字颜色（可选）</td></tr></tbody></table><p><strong>实例</strong></p><p>查看答案</p><div class="hide-block"><button type="button" class="hide-button" style="">查看答案    </button><div class="hide-content"><p>傻子，怎么可能有答案<br><img src="https://gitee.com/atdunbg/myblog/blob/master/-71349bb7a323320e.jpg"></p></div></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查看答案</span><br><span class="line">&#123;% hideBlock 查看答案 %&#125;</span><br><span class="line">傻子，怎么可能有答案</span><br><span class="line">![](<span class="link">https://gitee.com/atdunbg/myblog/blob/master/-71349bb7a323320e.jpg</span>)</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tag-hide-3"><p>用法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>名称</th><th>用法</th></tr></thead><tbody><tr><td>content</td><td>文本内容</td></tr><tr><td>display</td><td>按钮显示的文字（可选）</td></tr><tr><td>bg</td><td>按钮的背景颜色（可选）</td></tr><tr><td>color</td><td>按钮文字颜色（可选）</td></tr></tbody></table><p><strong>实例</strong></p><details class="toggle" ><summary class="toggle-button" style="">Butterfly安装方法</summary><div class="toggle-content"><p>在你的博客根目录里</p><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p><p>如果想要安装比较新的dev分支，可以</p><p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p></div></details><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle Butterfly安装方法 %&#125;</span><br><span class="line">在你的博客根目录里</span><br><span class="line"></span><br><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line"></span><br><span class="line">如果想要安装比较新的dev分支，可以</span><br><span class="line"></span><br><span class="line">git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line"></span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="mermaid"><a href="#mermaid" class="headerlink" title="mermaid"></a>mermaid</h2><p>使用mermaid标签可以绘制Flowchart（流程图）、Sequence diagram（时序图 ）、Class Diagram（类别图）、State Diagram（状态图）、Gantt（甘特图）和Pie Chart（圆形图），具体可以查看<a href="https://mermaid-js.github.io/mermaid/#/">mermaid文档</a></p><p>配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mermaid</span></span><br><span class="line"><span class="comment"># see https://github.com/mermaid-js/mermaid</span></span><br><span class="line"><span class="attr">mermaid:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># built-in themes: default/forest/dark/neutral</span></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">default</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">dark</span></span><br></pre></td></tr></table></figure><p>写法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  pie    title Key elements in Product X    &quot;Calcium&quot; : 42.96    &quot;Potassium&quot; : 50.05    &quot;Magnesium&quot; : 10.01    &quot;Iron&quot; :  5  </pre></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">pie</span><br><span class="line"><span class="code">    title Key elements in Product X</span></span><br><span class="line"><span class="code">    &quot;Calcium&quot; : 42.96</span></span><br><span class="line"><span class="code">    &quot;Potassium&quot; : 50.05</span></span><br><span class="line"><span class="code">    &quot;Magnesium&quot; : 10.01</span></span><br><span class="line"><span class="code">    &quot;Iron&quot; :  5</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h2><p>移植于next主题（作者Jerry说的）</p><p>使用方法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line"><span class="code">                Will be used in #id&#x27;s as prefix for each tab with their index numbers.</span></span><br><span class="line"><span class="code">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class="line"><span class="code">                Only for current url of post/page must be unique!</span></span><br><span class="line"><span class="code">[index]       : Index number of active tab.</span></span><br><span class="line"><span class="code">                If not specified, first tab (1) will be selected.</span></span><br><span class="line"><span class="code">                If index is -1, no tab will be selected. It&#x27;s will be something like spoiler.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[Tab caption] : Caption of current tab.</span></span><br><span class="line"><span class="code">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class="line"><span class="code">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[@icon]       : FontAwesome icon name (full-name, look like &#x27;fas fa-font&#x27;)</span></span><br><span class="line"><span class="code">                Can be specified with or without space; e.g. &#x27;Tab caption @icon&#x27; similar to &#x27;Tab caption@icon&#x27;.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br></pre></td></tr></table></figure><p>实例：</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>可以添加自定义图标</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一個Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸彈</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字為第一個Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有圖標 沒有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><p>使用方法：</p><table><thead><tr><th>名称</th><th>用法</th></tr></thead><tbody><tr><td>url</td><td>链接</td></tr><tr><td>text</td><td>按钮文字</td></tr><tr><td>icon</td><td>[可选] 图标</td></tr><tr><td>color</td><td>[可选] 按钮背景顔色(默认style时），按钮字体和边框顔色(outline时)default&#x2F;blue&#x2F;pink&#x2F;red&#x2F;purple&#x2F;orange&#x2F;green</td></tr><tr><td>style</td><td>[可选] 按钮样式 默认实心    outline&#x2F;留空</td></tr><tr><td>layout</td><td>[可选] 按钮布局 默认line    block&#x2F;留空</td></tr><tr><td>position</td><td>[可选] 按钮位置 默认最左边（前提设置了layout为block） 默认最左边    center&#x2F;right&#x2F;留空</td></tr><tr><td>size</td><td>[可选] 按钮大小   large&#x2F;留空</td></tr></tbody></table><p><strong>实例</strong></p><div class="tabs" id="button"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#button-1">大小实心</button></li><li class="tab"><button type="button" data-href="#button-2">位置</button></li><li class="tab"><button type="button" data-href="#button-3">颜色</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="button-1"><p>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/"   title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/"   title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,larger %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="button-2"><p><a class="btn-beautify block" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br><a class="btn-beautify block center larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br><a class="btn-beautify block right outline larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,block %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,block center larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,block right outline larger %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="button-3"><p><a class="btn-beautify larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br><a class="btn-beautify blue larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br><a class="btn-beautify pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br><a class="btn-beautify red larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br><a class="btn-beautify purple larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br><a class="btn-beautify orange larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br><a class="btn-beautify green larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><div class="btn-center"><a class="btn-beautify outline larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline blue larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline red larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline purple larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline orange larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline green larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,blue larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,pink larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,red larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,purple larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,orange larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,green larger %&#125;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-center&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline blue larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline pink larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline red larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline purple larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline orange larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline green larger %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Label"><a href="#Label" class="headerlink" title="Label"></a>Label</h2><p><strong>高亮文字</strong></p><p>语法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label text color %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>text</td><td>文字</td></tr><tr><td>color</td><td>【可选】背景颜色，默认为 default  default&#x2F;blue&#x2F;pink&#x2F;red&#x2F;purple&#x2F;orange&#x2F;green</td></tr></tbody></table><details class="toggle" ><summary class="toggle-button" style="">例子</summary><div class="toggle-content"><p><mark class="hl-label orange">markdown</mark><br><mark class="hl-label purple">hello</mark> world<br>你好<mark class="hl-label green">世界</mark><br>这是一个<mark class="hl-label blue">简单的网站</mark><br>这是<mark class="hl-label default">一篇</mark> 小笔记文章</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle 例子 %&#125;</span><br><span class="line">&#123;% label markdown orange %&#125;</span><br><span class="line">&#123;% label hello purple %&#125;world</span><br><span class="line">你好&#123;% label 世界 green %&#125;</span><br><span class="line">这是一个&#123;% label 简单的网站 blue %&#125;</span><br><span class="line">这是&#123;% label 一篇 %&#125;小笔记文章</span><br></pre></td></tr></table></figure></div></details><h2 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h2><p>语法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline title,color %&#125;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">xxxxx</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">xxxxx</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>名称</th><th>用法</th></tr></thead><tbody><tr><td>title</td><td>时间线</td></tr><tr><td>color</td><td>timeline 颜色default(留空) &#x2F; blue &#x2F; pink &#x2F; red &#x2F; purple &#x2F; orange &#x2F; green</td></tr></tbody></table><p><strong>实例</strong></p><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-18</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2022 %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><p>本人如blog名字一样，纯小白<br>不过也正在努力学习中….</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2022/11/18/test/"/>
      <url>/2022/11/18/test/</url>
      
        <content type="html"><![CDATA[<p>代码测试</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>你好<br>这是<a href="https://s1.vika.cn/space/2022/11/20/7b326b3a890f46d89d4fff375a30d255">图片</a></li></ul><p>这是链接<a href="https://cdn.jsdelivr.net/gh/watchdogs-X/hexo_img/202211201849126.jpg">https://cdn.jsdelivr.net/gh/watchdogs-X/hexo_img/202211201849126.jpg</a></p><p>查看图片</p><div class="hide-block"><button type="button" class="hide-button" style="">查看图片    </button><div class="hide-content"><p><img src="https://s1.vika.cn/space/2022/11/20/7b326b3a890f46d89d4fff375a30d255"></p></div></div><p>用来存小工具的网盘<a href="http://81.68.242.29:5212/s/D4fp">proselyte</a></p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Typecho+replit搭建一个免费的BLOG</title>
      <link href="/2022/11/16/typecho_replit/"/>
      <url>/2022/11/16/typecho_replit/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>本教程是简易教程</p><p>原视频教程：up<a href="https://www.bilibili.com/video/BV1tf4y1o7uu/?spm_id_from=333.337.search-card.all.click">Sayafx</a><br>replit+typecho博客，<br>搭建完成之后效果如这个站-<a href="https://typechoblog.watchdogs-x.repl.co/">一个小白</a></p><p>Replit  是一个简单但功能强大的在线IDE、编辑器、编译器、解释器和REPL，支持PHP、Python等50多种编程语言进行编码、编译、运行和托管。</p><h2 id="看之前要准备的东西"><a href="#看之前要准备的东西" class="headerlink" title="看之前要准备的东西"></a>看之前要准备的东西</h2><p>1,一台设备，手机电脑都行<br>2,replit账号（如果有github账号的话，可以用github账号注册replit）<br>3,一双手</p><h2 id="部署方法"><a href="#部署方法" class="headerlink" title="部署方法"></a>部署方法</h2><p>首先打开并登录replit，进入到这个界面<br><img src="https://typechoblog.watchdogs-x.repl.co/usr/uploads/2022/09/41761157.jpg" alt="1.jpg"><br>然后点击team<br>再点击 +New Education Organization<br>名字随便填</p><p>之后勾选 I confirm that I am a teacher or administrator at an institution or organization of the above type.</p><p>并点击create new team organization</p><p>然后在这个界面点击 new team in xxxxx<br><img src="https://typechoblog.watchdogs-x.repl.co/usr/uploads/2022/09/562513957.jpg" alt="IMG_20220929_230239.jpg"><br><img src="https://typechoblog.watchdogs-x.repl.co/usr/uploads/2022/09/3892866354.jpg" alt="3.jpg"></p><p>第一空行名字随便填，第二个填写时要注意下，你填写的东西将会显示在你的域名上。</p><p>完成之后点击 create team，之后他会跳转到下面这个页面</p><p>点击 create project<br><img src="https://typechoblog.watchdogs-x.repl.co/usr/uploads/2022/09/139641748.jpg" alt="4b.jpg"></p><p>第一个选择bash， title填写也要注意，也会显示到域名里（如果与上一个填写的一样，他就只显示一个，不重复显示）</p><p>剩下的全空，直接点击Create</p><p>等待部署完毕，直到出现以下界面</p><p><img src="https://typechoblog.watchdogs-x.repl.co/usr/uploads/2022/09/72055091.jpg" alt="5a.jpg"><br>这时在右边指令框中填写这个指令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/Sayafx/typechonreplit.git &amp;&amp; mv -b typechonreplit/* ./ &amp;&amp; mv -b typechonreplit/.[^.]* ./ &amp;&amp; rm -rf *~ &amp;&amp; rm -rf typechonreplit</span></span><br></pre></td></tr></table></figure><p>等待加载完<br>此时左边会出现一个main.sh<br>再输入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh main.sh</span><br></pre></td></tr></table></figure><p>等待加载完毕<br><img src="https://typechoblog.watchdogs-x.repl.co/usr/uploads/2022/09/3210347285.jpg" alt="5b.jpg"></p><p>加载完之后，就可以点击绿色的按钮<br>之后右边会家加载一个小窗，点击小窗的跳转按键<br><img src="https://typechoblog.watchdogs-x.repl.co/usr/uploads/2022/09/1391898763.jpg" alt="7.jpg"><br>跳转新页面<br>这时就可以可视化部署typecho了</p><p><img src="https://typechoblog.watchdogs-x.repl.co/usr/uploads/2022/09/2912292085.jpg" alt="7.jpg"></p><p>我准备好了，开始下一步</p><p>数据库适配器 选择 SQLite原生函数适配器<br>剩下的默认<br>然后进入下一步<br><img src="https://typechoblog.watchdogs-x.repl.co/usr/uploads/2022/09/2374568550.jpg" alt="8.jpg"></p><p>添加 用户名 密码 邮箱（邮箱没啥大用，随便填一个就行）</p><p>点击 继续安装</p><p>接下来的页面中选择  点击这里访问您的控制面板–&gt;左上角控制台–&gt;外观–&gt;启用butterfly的主题。<br><img src="https://typechoblog.watchdogs-x.repl.co/usr/uploads/2022/09/1543981296.jpg" alt="11.jpg"><br>再点击右上角的 网站 就可以了</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>好了，这样你就成功搭建了一个属于自己blog，接下来剩下的功能就靠你自己来发掘了！</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题--Butterfly</title>
      <link href="/2022/11/16/README_CN/"/>
      <url>/2022/11/16/README_CN/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-theme-butterfly"><a href="#hexo-theme-butterfly" class="headerlink" title="hexo-theme-butterfly"></a>hexo-theme-butterfly</h1><p><img src="https://img.shields.io/github/package-json/v/jerryc127/hexo-theme-butterfly/master?color=%231ab1ad&label=master" alt="master version"><br><img src="https://img.shields.io/github/package-json/v/jerryc127/hexo-theme-butterfly/dev?label=dev" alt="master version"><br><img src="https://img.shields.io/npm/v/hexo-theme-butterfly?color=%09%23bf00ff" alt="https://img.shields.io/npm/v/hexo-theme-butterfly?color=%09%23bf00ff"><br><img src="https://img.shields.io/badge/hexo-5.3.0+-0e83c" alt="hexo version"><br><img src="https://img.shields.io/github/license/jerryc127/hexo-theme-butterfly?color=FF5531" alt="license"></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/theme-butterfly-readme.png"></p><p>預覽: 👍 <a href="https://butterfly.js.org/">Butterfly</a>  ||  🤞 <a href="https://crazywong.com/">CrazyWong</a></p><p>文檔: 📖 <a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly Docs</a></p><p>一款基於<a href="https://github.com/Molunerfinn/hexo-theme-melody">hexo-theme-melody</a>修改的主題</p><h2 id="💻-安裝"><a href="#💻-安裝" class="headerlink" title="💻 安裝"></a>💻 安裝</h2><h3 id="Git-安裝"><a href="#Git-安裝" class="headerlink" title="Git 安裝"></a>Git 安裝</h3><blockquote><p>本倉庫同時上傳到 <a href="https://gitee.com/immyw/hexo-theme-butterfly.git">Gitee</a>，如果你訪問 Github 緩慢，可從 Gitee 中下載。</p></blockquote><p>在博客根目錄裡安裝穩定版【推薦】</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> master https://github.com/jerryc127/hexo<span class="literal">-theme-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure><p>如果想要安裝比較新的dev分支，可以</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> dev https://github.com/jerryc127/hexo<span class="literal">-theme-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure><h3 id="npm-安裝"><a href="#npm-安裝" class="headerlink" title="npm 安裝"></a>npm 安裝</h3><blockquote><p>此方法只支持Hexo 5.0.0以上版本</p></blockquote><p>在博客根目錄裡</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo<span class="literal">-theme-butterfly</span></span><br></pre></td></tr></table></figure><h2 id="⚙-應用主題"><a href="#⚙-應用主題" class="headerlink" title="⚙ 應用主題"></a>⚙ 應用主題</h2><p>修改hexo配置文件<code>_config.yml</code>，把主題改為<code>Butterfly</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><blockquote><p>如果你沒有pug以及stylus的渲染器，請下載安裝： npm install hexo-renderer-pug hexo-renderer-stylus –save</p></blockquote><h2 id="🎉-特色"><a href="#🎉-特色" class="headerlink" title="🎉 特色"></a>🎉 特色</h2><ul><li><input checked="" disabled="" type="checkbox"> 卡片化設計</li><li><input checked="" disabled="" type="checkbox"> 支持二級目錄</li><li><input checked="" disabled="" type="checkbox"> 雙欄設計</li><li><input checked="" disabled="" type="checkbox"> 響應式主題</li><li><input checked="" disabled="" type="checkbox"> 夜間模式</li><li><input checked="" disabled="" type="checkbox"> Pjax</li><li><input checked="" disabled="" type="checkbox"> 文章閲讀模式</li><li><input checked="" disabled="" type="checkbox"> 簡體和繁體轉換</li><li><input checked="" disabled="" type="checkbox"> 電腦和手機都可查看TOC目錄</li><li><input checked="" disabled="" type="checkbox"> 內置多種代碼配色（darker&#x2F;pale night&#x2F;light&#x2F;ocean&#x2F;mac&#x2F;mac light），可自定義代碼配色</li><li><input checked="" disabled="" type="checkbox"> 代碼塊顯示代碼語言&#x2F;關閉或展開代碼塊&#x2F;代碼複製&#x2F;代碼自動換行</li><li><input checked="" disabled="" type="checkbox"> 可關閉文字複製&#x2F;可開啟內容複製增加版權信息）</li><li><input checked="" disabled="" type="checkbox"> 兩種搜索（Algolia搜索和本地搜索）</li><li><input checked="" disabled="" type="checkbox"> Mathjax 和 Katex</li><li><input checked="" disabled="" type="checkbox"> 內置404頁面</li><li><input checked="" disabled="" type="checkbox"> 顯示字數統計</li><li><input checked="" disabled="" type="checkbox"> 顯示相關文章</li><li><input checked="" disabled="" type="checkbox"> 過期文章提醒</li><li><input checked="" disabled="" type="checkbox"> 多種分享系統（AddThis&#x2F;Sharejs&#x2F;Addtoany）</li><li><input checked="" disabled="" type="checkbox"> 多種評論系統（Disqus&#x2F;Disqusjs&#x2F;Livere&#x2F;Gitalk&#x2F;Valine&#x2F;Waline&#x2F;Utterances&#x2F;Facebook Comments&#x2F;Twikoo&#x2F;Giscus&#x2F;Remark42&#x2F;artalk）</li><li><input checked="" disabled="" type="checkbox"> 支持雙評論部署</li><li><input checked="" disabled="" type="checkbox"> 多種在線聊天（Chatra&#x2F;Tidio&#x2F;Daovoice&#x2F;Gitter&#x2F;Crisp&#x2F;messenger）</li><li><input checked="" disabled="" type="checkbox"> 多種分析系統</li><li><input checked="" disabled="" type="checkbox"> 谷歌廣告&#x2F;手動廣告位置</li><li><input checked="" disabled="" type="checkbox"> 各種站長驗證（Google&#x2F;Bing&#x2F;Baidu&#x2F;360&#x2F;Yandex）</li><li><input checked="" disabled="" type="checkbox"> 修改網站配色</li><li><input checked="" disabled="" type="checkbox"> 打字特效 activate_power_mode</li><li><input checked="" disabled="" type="checkbox"> 多種背景特效（靜止彩帶&#x2F;動態彩帶&#x2F;Canvas Nest）</li><li><input checked="" disabled="" type="checkbox"> 多種鼠標點擊特效（煙花&#x2F;文字&#x2F;愛心）</li><li><input checked="" disabled="" type="checkbox"> 內置一種 Preloader 加載動畫和 pace.js 加載動畫條</li><li><input checked="" disabled="" type="checkbox"> 不蒜子訪問統計</li><li><input checked="" disabled="" type="checkbox"> 兩種大圖模式（Medium Zoom&#x2F;Fancybox）</li><li><input checked="" disabled="" type="checkbox"> Mermaid 圖表顯示</li><li><input checked="" disabled="" type="checkbox"> 照片牆</li><li><input checked="" disabled="" type="checkbox"> 圖片懶加載</li><li><input checked="" disabled="" type="checkbox"> Instantpage&#x2F;Pangu&#x2F;Snackbar彈窗&#x2F;PWA……</li></ul><h2 id="✨-貢獻者"><a href="#✨-貢獻者" class="headerlink" title="✨ 貢獻者"></a>✨ 貢獻者</h2><a href="https://github.com/jerryc127/hexo-theme-butterfly/graphs/contributors">  <img src="https://contrib.rocks/image?repo=jerryc127/hexo-theme-butterfly" /></a><h2 id="📷-截圖"><a href="#📷-截圖" class="headerlink" title="📷 截圖"></a>📷 截圖</h2><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/butterfly-readme-screenshots-1.jpg"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/butterfly-readme-screenshots-2.jpg"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/butterfly-readme-screenshots-3.jpg"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/butterfly-readme-screenshots-4.jpg"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/theme-butterfly-readme-homepage-1.png"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/theme-butterfly-readme-homepage-2.png"></p>]]></content>
      
      
      <categories>
          
          <category> butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/13/hello-world/"/>
      <url>/2022/11/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 你好世界 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
